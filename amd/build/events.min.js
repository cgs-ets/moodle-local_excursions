define(["jquery","core/log","core/ajax","core/str"],function(t,n,e,o){"use strict";function s(e){var t=this;t.rootel=e,t.eventrows=t.rootel.find("table.events tr"),t.eventrows=document.querySelectorAll("table.events tr")}return s.prototype.main=function(){this.eventrows.length&&this.getForNextRow(-1)},s.prototype.getForNextRow=function(e){var t=this,e=e+1;t.eventrows.length>=e&&t.getConflictsForRow(t.eventrows[e].dataset.eventid,e)},s.prototype.getConflictsForRow=function(t,o){var s=this;n.debug("Getting conflicts for row "+o+" eventid "+s.eventrows[o].dataset.eventid),s.eventrows[o].classList.remove("conflicts-checked"),s.eventrows[o].classList.remove("has-conflicts"),s.eventrows[o].classList.remove("no-conflicts"),s.eventrows[o].dataset.conflicts="",s.eventrows[o].classList.add("checking-conflicts"),e.call([{methodname:"local_excursions_formcontrol",args:{action:"check_conflicts_for_event",data:t},done:function(e){e=JSON.parse(e);s.eventrows[o].classList.remove("checking-conflicts"),s.eventrows[o].classList.add("conflicts-checked"),e.hasConflicts?(s.eventrows[o].classList.add("has-conflicts"),s.eventrows[o].dataset.conflicts=e.html):s.eventrows[o].classList.add("no-conflicts"),s.getForNextRow(o)},fail:function(e){s.eventrows[o].classList.remove("checking-conflicts"),s.eventrows[o].classList.add("conflicts-checked"),n.error("local_excursions/events: failed to check conflicts for event "+t),n.debug(e),s.getForNextRow(o)}}])},{init:function(){n.debug("local_excursions/events: initializing");var e=t("#page-local-excursions-events");e.length?new s(e).main():n.error("local_excursions/events: #page-local-excursions-events not found!")}}});