define(["jquery","local_excursions/recipientselector","core/log","core/templates","core/ajax","core/str","core/modal_factory","core/modal_events"],function(o,r,l,e,u,n,t,c){"use strict";function a(e){var n=this;n.rootel=e,n.form=n.rootel.find('form[data-form="excursions-event"]'),n.eventid=n.form.data("eventid"),n.areastree=null,n.categoriestree=null,n.conflictCheckDone=!1,t.create({type:t.types.SAVE_CANCEL}).then(function(e){e.setTitle("Conflicts found"),e.setSaveButtonText("Submit anyway"),n.modal=e,n.modal.getModal().addClass("modal-xl"),n.modal.getRoot().on(c.save,function(e){n.submitForm()})}),window.addEventListener("beforeunload",function(e){console.log("UNLOAD:1")})}return a.prototype.convertFieldsToDate=function(e){return o('[name="'+e+'[year]"]').val()+"-"+o('[name="'+e+'[month]"]').val().padStart(2,"0")+"-"+o('[name="'+e+'[day]"]').val().padStart(2,"0")+" "+o('[name="'+e+'[hour]"]').val().padStart(2,"0")+":"+o('[name="'+e+'[minute]"]').val().padStart(2,"0")},a.prototype.main=function(){var e,n,t,c,i=this;i.owner=r.init("owner","staff",0),"undefined"!=typeof Tree&&"undefined"!=typeof calcategories&&(t=(e=o('input[name="categoriesjson"]').first()).val(),c=t?JSON.parse(t):[],i.categoriestree=new Tree(".categoriescontainer",{data:calcategories,closeDepth:1,loaded:function(){this.values=c},onChange:function(){e.val(JSON.stringify(this.values))}})),"undefined"!=typeof Tree&&"undefined"!=typeof eventareas&&(t=(n=o('input[name="areasjson"]').first()).val(),c=t?JSON.parse(t):[],i.areastree=new Tree(".areascontainer",{data:eventareas,closeDepth:3,loaded:function(){this.values=c},onChange:function(){n.val(JSON.stringify(this.values))}})),i.rootel.on("click",'input[name="cancel"]',function(e){i.form.find('[name="action"]').val("cancel")}),i.rootel.on("click",'input[name="delete"]',function(e){i.form.find('[name="action"]').val("delete")}),i.rootel.on("click","#id_submitbutton",function(e){var n,t,c,r,a;i.conflictCheckDone||(e.preventDefault(),e=i.convertFieldsToDate("timestart"),n=i.convertFieldsToDate("timeend"),(t=o('input[name="recurring"]:checked').val())&&(c=o('input[name="recurringpattern"]:checked').val(),r=o('input[name="recurringdailypattern"]:checked').val(),a=i.convertFieldsToDate("recuruntil")),u.call([{methodname:"local_excursions_formcontrol",args:{action:"check_conflicts",data:JSON.stringify({timestart:e,timeend:n,eventid:i.eventid,recurringsettings:t?{recurring:t,recurringpattern:c,recurringdailypattern:r,recuruntil:a}:null})},done:function(e){var n,e=JSON.parse(e);console.log(e),i.form.addClass("conflicts-checked"),e.conflicts.length?(n='<div class="conflicts-wrap"><div class="alert alert-warning"><strong>Review the conflicts below and consider whether your event needs to be moved before you continue.</strong></div>',n+=e.html,i.modal.setBody(n+="</div>"),i.modal.show()):i.submitForm()},fail:function(e){i.form.addClass("conflicts-checked"),l.error("local_excursions/eventform: failed to check conflicts."),l.debug(e),i.submitForm()}}]))}),i.setupCheckRecurring()},a.prototype.checkRecurring=function(){var e,n,t,c=this,r=(o("#calculated-dates").html(""),o('input[name="editseries"]:checked').val());"event"!=r&&o('input[name="recurring"]:checked').val()&&(r=c.convertFieldsToDate("timestart"),e=c.convertFieldsToDate("timeend"),n=o('input[name="recurringpattern"]:checked').val(),t=o('input[name="recurringdailypattern"]:checked').val(),c=c.convertFieldsToDate("recuruntil"),u.call([{methodname:"local_excursions_formcontrol",args:{action:"expand_dates",data:JSON.stringify({recurring:{recurringdailypattern:t,recurringpattern:n,recuruntil:c},timestart:r,timeend:e})},done:function(e){let n=JSON.parse(e);if(void 0!==n.datesReadable&&n.datesReadable.length){let e=n.datesReadable.map(e=>"<li>"+e.start+" - "+e.end+"</li>");o("#calculated-dates").html("The following occurrences will be created: <br><ul>"+e.join(" ")+"</ul>")}}}]))},a.prototype.submitForm=function(){this.modal.hide(),this.conflictCheckDone=!0,o("#id_submitbutton").click()},a.prototype.setupCheckRecurring=function(){var e=this;o('input[name="editseries"]').change(function(){e.checkRecurring()}),o('input[name="recurring"]').change(function(){e.checkRecurring()}),o('input[name="recurringpattern"]').change(function(){e.checkRecurring()}),o('input[name="recurringdailypattern"]').change(function(){e.checkRecurring()}),o('select[name="recuruntil[day]"]').change(function(){e.checkRecurring()}),o('select[name="recuruntil[month]"]').change(function(){e.checkRecurring()}),o('select[name="recuruntil[year]"]').change(function(){e.checkRecurring()}),o('select[name="recuruntil[hour]"]').change(function(){e.checkRecurring()}),o('select[name="recuruntil[minute]"]').change(function(){e.checkRecurring()}),o('select[name="timestart[day]"]').change(function(){e.checkRecurring()}),o('select[name="timestart[month]"]').change(function(){e.checkRecurring()}),o('select[name="timestart[year]"]').change(function(){e.checkRecurring()}),o('select[name="timestart[hour]"]').change(function(){e.checkRecurring()}),o('select[name="timestart[minute]"]').change(function(){e.checkRecurring()}),o('select[name="timeend[day]"]').change(function(){e.checkRecurring()}),o('select[name="timeend[month]"]').change(function(){e.checkRecurring()}),o('select[name="timeend[year]"]').change(function(){e.checkRecurring()}),o('select[name="timeend[hour]"]').change(function(){e.checkRecurring()}),o('select[name="timeend[minute]"]').change(function(){e.checkRecurring()})},{init:function(){l.debug("local_excursions/event: initializing");var e=o("#page-local-excursions-event");e.length?new a(e).main():l.error("#page-local-excursions-event not found!")}}});